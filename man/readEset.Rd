% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io_tab.R
\name{readEset}
\alias{readEset}
\title{Read eSet object from plain files}
\usage{
readEset(
  exprs.file,
  fData.file,
  pData.file,
  exprs.file.format = c("gct", "tsv"),
  sep = "\\t",
  header = TRUE,
  ...
)
}
\arguments{
\item{exprs.file}{Character, file name where \code{exprs} data is written to}

\item{fData.file}{Character, optional, file name where \code{fData} data is written to}

\item{pData.file}{Character, optional, file name where \code{pData} data is written to}

\item{exprs.file.format}{Character, write \code{exprs} data in either \code{gct} or \code{tsv} format}

\item{header}{Logical, whether a head line is present

The function can read in eSet object saved by \code{\link{writeEset}} by parsing
three plain text files: \code{exprs.file}, \code{fData.file}, and \code{pData.file}.

Currently both \code{tsv} and \code{gct} formats are supported for expression
file.

See \code{writeEset} for limitations of these functions.}

\item{set}{Character, separator}
}
\description{
Read eSet object from plain files
}
\examples{
data(sample.ExpressionSet)
fData(sample.ExpressionSet) <- data.frame(ProbeID=featureNames(sample.ExpressionSet),
 row.names=featureNames(sample.ExpressionSet))
exprs.file <- tempfile()
fData.file <- tempfile()
pData.file <- tempfile()
writeEset(sample.ExpressionSet, exprs.file, fData.file, pData.file,
exprs.file.format="gct")
testRead1 <- readEset(exprs.file, fData.file, pData.file, exprs.file.format="gct")
writeEset(sample.ExpressionSet, exprs.file, fData.file, pData.file,
exprs.file.format="tsv")
testRead2 <- readEset(exprs.file, fData.file, pData.file, exprs.file.format="tsv")
}
\seealso{
\code{\link{writeEset}}
}
